<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHUANWISE</title>
  
  <subtitle>椽子的博客 (｡･∀･)ﾉﾞ</subtitle>
  <link href="https://chuanwise.github.io/atom.xml" rel="self"/>
  
  <link href="https://chuanwise.github.io/"/>
  <updated>2021-04-19T00:39:45.537Z</updated>
  <id>https://chuanwise.github.io/</id>
  
  <author>
    <name>Chuanwise</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小明框架开发文档</title>
    <link href="https://chuanwise.github.io/2021/04/19/%E5%B0%8F%E6%98%8E%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/"/>
    <id>https://chuanwise.github.io/2021/04/19/%E5%B0%8F%E6%98%8E%E6%A1%86%E6%9E%B6%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3/</id>
    <published>2021-04-18T23:28:57.000Z</published>
    <updated>2021-04-19T00:39:45.537Z</updated>
    
    <content type="html"><![CDATA[<p>本文对应 Github 项目：<a href="https://github.com/TaixueChina/XiaomingBot">小明框架</a></p><h2 id="插件组成"><a class="markdownIt-Anchor" href="#插件组成"></a> 插件组成</h2><p>小明插件由 <code>插件主类</code> 和资源文件 <code>plugin.json</code> 组成。</p><h3 id="插件主类"><a class="markdownIt-Anchor" href="#插件主类"></a> 插件主类</h3><p>插件主类继承自 <code>com.taixue.xiaomingbot.api.plugin.XiaomingPlugin</code>。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chuanwise.xiaomingplugin.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.api.plugin.XiaomingPlugin;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Chuanwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PluginExample</span> <span class="keyword">extends</span> <span class="title">XiaomingPlugin</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是一个最简单的插件。他不具备任何功能，但已经可以被小明加载了。</p><p><code>XiaomingPlugin</code> 类中的方法有：</p><h4 id="常用方法"><a class="markdownIt-Anchor" href="#常用方法"></a> 常用方法：</h4><table><thead><tr><th>说明</th><th>方法名</th><th>返回类型</th></tr></thead><tbody><tr><td>获取插件名</td><td>getName()</td><td>java.lang.String</td></tr><tr><td>获取加载该类时的类加载器（便于获取资源文件）</td><td>getClassLoader()</td><td>java.lang.ClassLoader</td></tr><tr><td>获取日志</td><td>getLogger()</td><td>org.slf4j.Logger</td></tr><tr><td>获得插件全名</td><td>getCompleteName()</td><td>java.lang.String</td></tr><tr><td>获取小明本体引用（参阅 <a href="#%E5%B0%8F%E6%98%8E%E7%BB%84%E6%88%90">小明组成</a>）</td><td>getXiaomingBot()</td><td>com.taixue.xiaomingbot.api.bot.XiaomingBot</td></tr><tr><td>获得配置文件</td><td>getConfigFile()</td><td>java.io.File</td></tr><tr><td>获得插件版本</td><td>getVersion()</td><td>java.lang.String</td></tr><tr><td>获取插件数据文件夹</td><td>getDataFolder()</td><td>java.io.File</td></tr><tr><td>复制默认配置文件</td><td>copyDefaultConfig()</td><td>boolean</td></tr><tr><td>加载配置文件</td><td>loadConfigAsOrNew(configClass: java.lang.Classfactory: com.taixue.xiaomingbot.util.FileDataFactory)</td><td>com.taixue.xiaomingbot.util.JSONFileData</td></tr><tr><td>以某类的形式加载配置文件</td><td>loadConfigAs(configClass: java.lang.Class)</td><td>com.taixue.xiaomingbot.util.JSONFileData</td></tr><tr><td>以图形式加载配置文件</td><td>loadConfigAsMap()</td><td>java.util.Map</td></tr></tbody></table><h5 id="getdatafolder"><a class="markdownIt-Anchor" href="#getdatafolder"></a> getDataFolder()</h5><p>插件数据文件夹<code>小明根目录/plugins/&lt;插件名&gt;</code>，存放插件相关的数据文件。它不一定存在。</p><h5 id="getconfigfile"><a class="markdownIt-Anchor" href="#getconfigfile"></a> getConfigFile()</h5><p>获得插件数据文件夹内的 <code>config.json</code>。等价于 <code>new File(getDataFolder(), &quot;config.json&quot;)</code>。</p><h5 id="getcompletename"><a class="markdownIt-Anchor" href="#getcompletename"></a> getCompleteName()</h5><p>插件全名是插件名和版本号，等价于 <code>getName() + &quot; (&quot; + getVersion() + &quot;)&quot;</code>。</p><h5 id="copydefaultconfig"><a class="markdownIt-Anchor" href="#copydefaultconfig"></a> copyDefaultConfig()</h5><p>默认配置文件是资源文件 <code>config.json</code>。如果插件数据文件夹中不存在配置文件，则将其复制到该处。</p><h4 id="插件间通信相关方法"><a class="markdownIt-Anchor" href="#插件间通信相关方法"></a> 插件间通信相关方法</h4><table><thead><tr><th>说明</th><th>方法名</th><th>返回类型</th></tr></thead><tbody><tr><td>和其他插件挂钩</td><td>hook(otherPlugin: com.taixue.xiaomingbot.api.plugin.XiaomingPluginholderClass: java.lang.Class)<br>hook(pluginName: java.lang.StringholderClass: java.lang.Class)</td><td>com.taixue.xiaomingbot.api.plugin.HookHolder</td></tr><tr><td>判断是否正在和某插件挂钩</td><td>isHookingWith(pluginName: java.lang.String)<br>isHookingWith(plugin: com.taixue.xiaomingbot.api.plugin.XiaomingPlugin)</td><td>boolean</td></tr><tr><td>主动和某插件脱钩</td><td>unhook(pluginName: java.lang.String)<br>unhook(plugin: com.taixue.xiaomingbot.api.plugin.XiaomingPlugin)<br>unhook(hookHolder: com.taixue.xiaomingbot.api.plugin.HookHolder)</td><td>boolean</td></tr><tr><td>获得和所有插件的 <code>HookHolder</code></td><td>getHookHolders()</td><td>java.util.Map</td></tr><tr><td>和所有插件脱钩</td><td>unHookAll()</td><td>boolean</td></tr><tr><td>其他插件和本插件挂钩时的操作</td><td>onHook(otherPlugin: com.taixue.xiaomingbot.api.plugin.XiaomingPluginholder: com.taixue.xiaomingbot.api.plugin.HookHolder)</td><td>void</td></tr><tr><td>获取和指定插件的 <code>HookHolder</code></td><td>getHookHolder(otherPluginName: java.lang.String)</td><td>com.taixue.xiaomingbot.api.plugin.HookHolder</td></tr></tbody></table><h4 id="可供重写的方法"><a class="markdownIt-Anchor" href="#可供重写的方法"></a> 可供重写的方法</h4><table><thead><tr><th>执行时机</th><th>方法名</th><th>返回类型</th></tr></thead><tbody><tr><td>其他插件与本插件脱钩时</td><td>onUnhook(plugin: com.taixue.xiaomingbot.api.plugin.XiaomingPluginholder: com.taixue.xiaomingbot.api.plugin.HookHolder)</td><td>void</td></tr><tr><td>插件加载时</td><td>onEnable()</td><td>void</td></tr><tr><td>插件卸载时</td><td>onDisable()</td><td>void</td></tr><tr><td>有群聊消息时</td><td>onGroupMessage(userData: com.taixue.xiaomingbot.api.listener.userdata.GroupDispatcherUser)</td><td>boolean</td></tr><tr><td>有私聊消息时</td><td>onPrivateMessage(userData: com.taixue.xiaomingbot.api.listener.userdata.PrivateDispatcherUser)</td><td>boolean</td></tr></tbody></table><h3 id="pluginjson"><a class="markdownIt-Anchor" href="#pluginjson"></a> <code>plugin.json</code></h3><p>该资源文件是小明识别插件主类的唯一途径。其至少包含 <code>main</code> 键值，否则小明无法加载插件。例如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;com.chuanwise.xiaomingplugin.example.PluginExample&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此外你还可以写：</p><table><thead><tr><th>值类型</th><th>键名</th><th>值说明</th></tr></thead><tbody><tr><td>字符串</td><td>name</td><td>插件名</td></tr><tr><td>字符串</td><td>version</td><td>插件版本</td></tr><tr><td>字符串数组</td><td>fronts</td><td>前置插件名（加载本插件前先加载的插件）</td></tr><tr><td>字符串</td><td>author</td><td>作者名</td></tr><tr><td>字符串数组</td><td>authors</td><td>作者们的名字</td></tr></tbody></table><p>例如</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;Lexicons&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;version&quot;</span>: <span class="string">&quot;1.0&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;authors&quot;</span>: [ <span class="string">&quot;Chuanwise&quot;</span> ],</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;com.taixue.xiaominglexicons.LexiconsPlugin&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>未来会在 <code>XiaomingPlugin</code> 中增加获得 <code>plugin.json</code> 中其他自定义信息的方法。</p><h2 id="更进一步"><a class="markdownIt-Anchor" href="#更进一步"></a> 更进一步</h2><h3 id="交互器"><a class="markdownIt-Anchor" href="#交互器"></a> 交互器</h3><p>如果想让你的插件响应群/私聊消息，有两种方法：重写 <code>XiaomingPlugin</code> 中的 <code>onGroupMessage</code> 或 <code>onPrivateMessage</code>。</p><p>但它处理上下文相关消息时非常麻烦：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">A：你好啊</span><br><span class="line">B：我不好               &#x2F;&#x2F; 普通消息交互器不响应</span><br><span class="line">A：小明帮帮我   </span><br><span class="line">小明：来啦，啥事 qwq？   &#x2F;&#x2F; 本交互器响应</span><br><span class="line">A：讲个冷笑话给B听</span><br><span class="line">小明：@B 从前有座山，山上有座庙，庙里有个老和尚在玩 Minecraft。     &#x2F;&#x2F; 交互器响应上一条消息，而非将其当做普通的群聊消息</span><br><span class="line">B：呜呜呜更难受了</span><br></pre></td></tr></table></figure><p>下面介绍交互器。交互器是 <code>com.taixue.xiaomingbot.api.listener.interactor.Interactor</code> 的子类，主要分两种：群聊交互器 <code>com.taixue.xiaomingbot.api.listener.interactor.GroupInteractor</code> 和私聊交互器 <code>com.taixue.xiaomingbot.api.listener.interactor.PrivateInteractor</code>。</p><h4 id="群聊交互器"><a class="markdownIt-Anchor" href="#群聊交互器"></a> 群聊交互器</h4><p>这是最简单的一个群聊交互器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chuanwise.xiaomingplugin.example.interactor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.api.listener.interactor.GroupInteractor;</span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.api.listener.userdata.GroupInteractorUser;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Chuanwise </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleGroupInteractor</span> <span class="keyword">extends</span> <span class="title">GroupInteractor</span>&lt;<span class="title">GroupInteractorUser</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onMessage</span><span class="params">(GroupInteractorUser groupInteractorUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>GroupInteractor</code> 的参数必须是 <code>GroupInteractorUser</code> 或其子类，是上下文交流的相关信息。一般使用 <code>GroupInteractorUser</code> 就可以。</p><p><code>onMessage</code> 将在出现了新的群聊消息时执行，返回 <code>true</code> 时表示不再寻找其他交互器匹配当前输入，<code>false</code> 则让小明继续寻找其他交互器。上述场景可以实现为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.chuanwise.xiaomingplugin.example.interactor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.api.listener.interactor.GroupInteractor;</span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.api.listener.userdata.GroupInteractorUser;</span><br><span class="line"><span class="keyword">import</span> com.taixue.xiaomingbot.util.AtUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Chuanwise</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleGroupInteractor</span> <span class="keyword">extends</span> <span class="title">GroupInteractor</span>&lt;<span class="title">GroupInteractorUser</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Pattern TELL_JOKE_TO = Pattern.compile(<span class="string">&quot;讲个(冷)?笑话给\\s*(?&lt;qq&gt;.*)\\s*(听)?&quot;</span>);</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onMessage</span><span class="params">(GroupInteractorUser groupInteractorUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> String message = groupInteractorUser.getMessage();</span><br><span class="line">        <span class="keyword">if</span> (!message.equals(<span class="string">&quot;小明帮帮我&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        groupInteractorUser.sendMessage(<span class="string">&quot;来啦，啥事 qwq？&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> String nextInput = getNextInput(groupInteractorUser);</span><br><span class="line">        <span class="keyword">final</span> Matcher matcher = TELL_JOKE_TO.matcher(nextInput);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (matcher.matches()) &#123;</span><br><span class="line">            <span class="keyword">final</span> String qqString = matcher.group(<span class="string">&quot;qq&quot;</span>);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">long</span> qq = AtUtil.parseQQ(qqString);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (qq == -<span class="number">1</span>) &#123;</span><br><span class="line">                groupInteractorUser.sendMessage(<span class="string">&quot;&#123;&#125; 是谁呀 (╯▔皿▔)╯&quot;</span>, qqString);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                groupInteractorUser.atSendGroupMessage(qq, <span class="string">&quot;从前有座山，山上有座庙，庙里有个老和尚在玩 Minecraft。&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            groupInteractorUser.sendMessage(<span class="string">&quot;小明不知道你说的是什么意思呢 (；′⌒`)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>随后在 <code>XiaomingPlugin</code> 中执行语句 <code>getXiaomingBot().getGroupInteractorManager().register(new ExampleGroupInteractor(), this);</code> 便可以注册该群聊交互器。</p><h2 id="小明组成"><a class="markdownIt-Anchor" href="#小明组成"></a> 小明组成</h2><p>（待完成）</p>]]></content>
    
    
    <summary type="html">QQ 机器人框架「小明」的开发文档</summary>
    
    
    
    <category term="Java" scheme="https://chuanwise.github.io/categories/Java/"/>
    
    
    <category term="小明" scheme="https://chuanwise.github.io/tags/%E5%B0%8F%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>欢迎串门 (๑•̀ㅂ•́)و✧</title>
    <link href="https://chuanwise.github.io/2021/04/11/%E6%AC%A2%E8%BF%8E%E4%B8%B2%E9%97%A8%20%EF%BC%9A%EF%BC%89/"/>
    <id>https://chuanwise.github.io/2021/04/11/%E6%AC%A2%E8%BF%8E%E4%B8%B2%E9%97%A8%20%EF%BC%9A%EF%BC%89/</id>
    <published>2021-04-11T14:06:29.000Z</published>
    <updated>2021-04-11T16:09:34.404Z</updated>
    
    <content type="html"><![CDATA[<h3 id="椽窝"><a class="markdownIt-Anchor" href="#椽窝"></a> 椽窝</h3><p>本周末抽空搭了自己的博客，起名「椽窝」，椽窝是古建筑一类非常不起眼的小窝，但对稍讲究的建筑而言不可或缺。</p><p>一直偶尔有些发些文章的需求。我注意到非常硬核，或者是分享些我在技术上的新发现或感到有趣的事情，在QQ空间获得的赞或互动比平时的说说少多了（虽然对空间的说说有这方面的「要求」听起来感觉挺小学生的，但毕竟是发到空间的当然是希望收获大家的回应），因而感到空间并不是很合适。知乎、CSDN等其他无数可以发文章的站点差不多都给我相同的感觉。而放在手机备忘录或者其他地方，并不便于必要时分享给大家。最后觉得还是搭个自己的博客最好。</p><p>所以你就看到了这一页。</p><p>从小学的时候我就一直希望未来做一个自己的网站。五年级的时候用 <code>PS + DW</code> 做了一个现在看起来技术很差的网站。后来对建站的热情慢慢下降。但在今天在本地测试，看到自己的博客加载出来，那种五年级时第一次看到自己的<code>DW</code>作品在浏览器上显示的愉快感觉马上就出现了，像是领了什么大奖。</p><p>搭建椽窝也是因为一段时间之前偶然发现了<a href="https://lhr.wiki">练巨的博客</a>，在里面看了一些很有意思的上古文章。虽然更新的不勤快但每篇都像是深夜两人都不着急睡时的长谈话。这让我觉得私人搭建的博客像一个不起眼的公开日记本，偶然或定期到访的朋友会令我感到惊喜和意外。每当我输入别人的博客地址，看到关注的人的私人博客有更新的内容时，也感到高兴。这和在一些大的社交媒体平台关注的账号更新了的感受完全不一样，颇有串门的味道。</p><h3 id="我菜爆了"><a class="markdownIt-Anchor" href="#我菜爆了"></a> 「我菜爆了」</h3><p>建立博客的直接原因也是在近期高强度的编程和看文档中，综合感到我菜爆了。</p><p>大一就出了实验结果的论文，咕到大二了还没有写完。大一的高数等课基本没好好听，也没有非常努力去打 OI，在这些方向上我算是硬生生浪费了一年。</p><p>大二上半学期决定好好学习，闷声拿大分。所以平时学习也比大一认真了一大截，但是个人感觉只是在编程的量上有了变化。</p><p>虽然我有了一点点成就，例如自己写了 MC 服务器的自定义指令：CustomCommands 插件、开发了基于 Simbot 框架的可加载插件的 XiaomingBot QQ 机器人框架，但这些代码质量并不很令人满意，时常有一些 Bug 冒出来。</p><p>大二下半学期就决定闷声拿大分的同时，也提升自己的编程水平。</p><p>不过椽窝除了更新技术分享和自己项目的一些文档，我也会把这里当「公开的日记本」，发稍长些的想法和自己的总结之类的。</p><p>今天写这些吧，感谢你这次串门。</p>]]></content>
    
    
    <summary type="html">刚搭好椽窝发出的第一篇文章</summary>
    
    
    
    <category term="闲聊" scheme="https://chuanwise.github.io/categories/%E9%97%B2%E8%81%8A/"/>
    
    
    <category term="闲聊" scheme="https://chuanwise.github.io/tags/%E9%97%B2%E8%81%8A/"/>
    
  </entry>
  
</feed>
